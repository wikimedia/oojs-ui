@import 'common.less';

.theme-oo-ui-widget() {}

.theme-oo-ui-actionWidget() {}

.theme-oo-ui-buttonWidget() {
	.oo-ui-inline-spacing( @margin-end-widget );
}

.theme-oo-ui-buttonGroupWidget() {
	display: inline-block;
	border-radius: @border-radius-base;
	.oo-ui-inline-spacing( @margin-end-widget );
	// Create a stacking context, so that we can use `z-index` below without leaking out
	z-index: 0;
	position: relative;
	padding-bottom: @border-width-base;

	// Overrides both, ButtonWidget & ToggleButtonWidget
	.oo-ui-buttonElement {
		margin-right: 0;
		z-index: 0;
	}

	.oo-ui-buttonElement-framed {
		.oo-ui-buttonElement-button {
			margin-right: -@border-width-base;
			margin-bottom: -@border-width-base;
			border-radius: 0;
		}

		&:first-child .oo-ui-buttonElement-button {
			border-bottom-left-radius: @border-radius-base;
			border-top-left-radius: @border-radius-base;
		}

		&:last-child .oo-ui-buttonElement-button {
			margin-right: 0;
			border-bottom-right-radius: @border-radius-base;
			border-top-right-radius: @border-radius-base;
		}

		&.oo-ui-widget-disabled + .oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				border-left-color: @border-color-inverted;
			}
		}
	}

	// Give hovered/focussed/active buttons higher `z-index`, so that borders display correctly.
	// Identical to .theme-oo-ui-buttonSelectWidget, except for the `:focus` selector.
	&.oo-ui-widget-enabled {
		.oo-ui-buttonElement {
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:hover,
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:active {
				z-index: 1;
			}

			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:focus {
				z-index: 2;
			}

			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				z-index: 3;
			}

			&.oo-ui-widget-disabled > .oo-ui-buttonElement-button {
				z-index: -1;
			}

			&.oo-ui-toggleWidget-on + .oo-ui-toggleWidget-on {
				> .oo-ui-buttonElement-button,
				> .oo-ui-buttonElement-button:active {
					border-left-color: @border-color-base;
					z-index: 3;
				}
			}
		}
	}
}

.theme-oo-ui-buttonInputWidget() {}

.theme-oo-ui-buttonMenuSelectWidget() {}

.theme-oo-ui-buttonOptionWidget() {}

.theme-oo-ui-buttonSelectWidget() {
	border-radius: @border-radius-base;
	.oo-ui-inline-spacing( @margin-end-widget );
	// Create a stacking context, so that we can use `z-index` below without leaking out
	z-index: 0;
	position: relative;
	padding-bottom: @border-width-base;

	&:focus {
		// The ButtonSelectWidget element is focusable when enabled, but we
		// want the focus visual outline only on single ButtonOptionWidgets below.
		// Support: Chrome <90 Also putting it on `disabled` as well as Chrome showed
		// outline as soon as `tabindex` attribute was on element.
		outline: 0;
	}

	.oo-ui-buttonOptionWidget {
		.oo-ui-buttonElement-button {
			margin-right: -@border-width-base;
			margin-bottom: -@border-width-base;
			border-radius: 0;
		}

		&:first-child .oo-ui-buttonElement-button {
			border-bottom-left-radius: @border-radius-base;
			border-top-left-radius: @border-radius-base;
		}

		&:last-child .oo-ui-buttonElement-button {
			margin-right: 0;
			border-bottom-right-radius: @border-radius-base;
			border-top-right-radius: @border-radius-base;
		}

		&.oo-ui-widget-disabled + .oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				border-left-color: @border-color-inverted;
			}
		}
	}

	&.oo-ui-widget-enabled {
		&:focus {
			.oo-ui-buttonOptionWidget.oo-ui-optionWidget-selected {
				.oo-ui-buttonElement-button {
					border-color: @border-color-progressive--focus;
					box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus, @box-shadow-inset-medium @box-shadow-color-inverted;
					// In Windows high contrast mode the outline becomes visible.
					outline: @outline-base--focus;
				}
			}
		}

		// Give hovered/focussed/active buttons higher `z-index`, so that borders display correctly.
		// Identical to .theme-oo-ui-buttonGroupWidget, except we don't need `:focus` selector.
		.oo-ui-buttonElement {
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:hover,
			&.oo-ui-widget-enabled > .oo-ui-buttonElement-button:active {
				z-index: 1;
			}

			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				z-index: 3;
			}

			&.oo-ui-widget-disabled > .oo-ui-buttonElement-button {
				z-index: -1;
			}
		}
	}
}

.theme-oo-ui-checkboxInputWidget() {
	// Create a stacking context, so that we can use `z-index` below without leaking out
	z-index: 0;
	position: relative;
	line-height: @size-input-binary;
	// Prevent the fake span from jumping to the next line of text
	white-space: nowrap;

	* {
		font: inherit;
		vertical-align: middle;
	}

	// `<input type=checkbox>` element is visually replaced by `span` that follows
	[ type='checkbox' ] {
		position: relative;
		// Support: Firefox mobile to override user-agent stylesheet, see T73750
		max-width: none;
		// Ensure the invisible input takes up the required width
		width: @size-input-binary;
		height: @size-input-binary;
		// Having margin would offset the input from where the span is absolutely positioned,
		// making only the overlap region receive events
		margin: 0;
		// Use opacity so that VoiceOver can still identify it
		opacity: 0;
		// Render "on top of" the span, so that it's still clickable
		z-index: 1;

		& + span {
			background-color: @background-color-base;
			background-size: 0 0;
			box-sizing: border-box;
			position: absolute;
			left: 0;
			width: @size-input-binary;
			height: @size-input-binary;
			border-color: @border-color-input-binary;
			border-style: @border-style-base;
			border-radius: @border-radius-base;
			border-width: @border-width-base;
		}

		&:checked:not( :indeterminate ) {
			& + span {
				// This must have two values to match `background-size: 0 0` above,
				// otherwise the transition does not work (at least in Chrome).
				background-size: @size-icon-small @size-icon-small;
			}
		}

		&:indeterminate {
			& + span::before {
				content: ' ';
				// `@color-inverted` as `background-color` due to Accent50 filled area below.
				background-color: @background-color-base;
				position: absolute;
				top: 50%;
				left: @start-input-binary-icon;
				right: @start-input-binary-icon;
				height: @border-width-base * 2;
				margin-top: -@border-width-base;
			}
		}

		&:disabled {
			& + span {
				background-color: @background-color-disabled;
				border-color: @border-color-disabled;
			}
		}
	}

	&.oo-ui-widget-enabled [ type='checkbox' ] {
		cursor: pointer;

		& + span {
			cursor: pointer;
			transition-property: background-color, border-color, box-shadow;
			transition-duration: @transition-duration-base;
		}

		// `:focus` has to come first, otherwise a specificity race with `:hover:focus` etc is necessary
		&:focus + span {
			border-color: @border-color-progressive--focus;
			box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus;
			// In Windows high contrast mode the outline becomes visible.
			outline: @outline-base--focus;
		}

		&:hover + span {
			border-color: @border-color-progressive--hover;
		}

		&:active + span {
			background-color: @background-color-progressive--active;
			border-color: @border-color-input-binary--active;
			box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--active;
		}

		&:checked,
		&:indeterminate {
			& + span {
				background-color: @background-color-progressive;
				border-color: @border-color-input-binary--checked;
			}

			&:focus + span {
				background-color: @background-color-progressive--focus;
				border-color: @border-color-input-binary--checked;
				box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus, @box-shadow-inset-medium @box-shadow-color-inverted;
			}

			&:hover + span {
				background-color: @background-color-progressive--hover;
				border-color: @border-color-progressive--hover;
			}

			&:active + span {
				background-color: @background-color-progressive--active;
				border-color: @border-color-input-binary--active;
				box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--active;
			}
		}
	}
}

.theme-oo-ui-checkboxMultioptionWidget() {
	padding: @padding-vertical-label 0;

	&:first-child {
		padding-top: 0;
	}

	&.oo-ui-labelElement > .oo-ui-labelElement-label {
		padding-left: @padding-start-fieldlayout-label;
	}

	.oo-ui-checkboxInputWidget {
		margin-right: 0;
	}
}

.theme-oo-ui-checkboxMultiselectWidget() {}

.theme-oo-ui-checkboxMultiselectInputWidget() {
	.oo-ui-fieldLayout {
		// Override `.oo-ui-fieldLayout.oo-ui-labelElement`.
		margin-top: 0;
		// Equal to CheckboxMultiOptionWidget and to prevent collapsing `margin`s.
		padding: @padding-vertical-label 0;

		&:first-child {
			padding-top: 0;
		}
	}
}

.theme-oo-ui-comboBoxInputWidget() {
	// Inherits from `inputWidget` & `textInputWidget`.
	.oo-ui-inputWidget-input {
		height: @size-200;
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
		border-right-width: 0;
	}

	// Undo setting properties above when there is no button:
	// if the menu is empty, or if this is the PHP version
	&.oo-ui-comboBoxInputWidget-empty .oo-ui-inputWidget-input,
	&-php .oo-ui-inputWidget-input {
		border-top-right-radius: @border-radius-base;
		border-bottom-right-radius: @border-radius-base;
		border-right-width: @border-width-base;
	}

	&-dropdownButton.oo-ui-indicatorElement {
		width: @width-button-combo-widget;

		.oo-ui-buttonElement-button {
			min-width: @min-width-button-combo-widget;
			padding-left: 0;

			> .oo-ui-indicatorElement-indicator {
				right: @start-framed-indicator-only-button-combo-widget;
			}
		}

		.oo-ui-buttonElement-button,
		.oo-ui-buttonElement-button:focus {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}
	}

	&-php .oo-ui-indicatorWidget {
		right: @padding-horizontal-base;
		margin: 0;
	}

	&-open &-dropdownButton {
		> .oo-ui-buttonElement-button {
			background-color: @background-color-base;

			.oo-ui-indicatorElement-indicator {
				opacity: @opacity-icon-base--selected;
			}
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-indicatorElement-indicator {
			// Exception for not using `@opacity-icon-base--disabled` due to inverting
			// colors on filled disabled widgets.
			opacity: @opacity-base;
		}
	}
}

.theme-oo-ui-decoratedOptionWidget() {
	padding: @padding-menu;
	line-height: @line-height-reset;

	&.oo-ui-iconElement {
		padding-left: @padding-start-menu-icon-label;
	}

	.oo-ui-iconElement-icon {
		left: @start-framed-icon-only;
	}

	.oo-ui-labelElement-label {
		line-height: @line-height-label;
	}

	&.oo-ui-indicatorElement {
		padding-right: @padding-start-indicator-plus;
	}

	.oo-ui-indicatorElement-indicator {
		right: @padding-horizontal-base;
	}

	&.oo-ui-widget-enabled {
		&:hover {
			.oo-ui-iconElement-icon,
			.oo-ui-indicatorElement-indicator {
				opacity: @opacity-icon-base--hover;
			}
		}

		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base;
			transition-property: opacity;
			transition-duration: @transition-duration-base;
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base--disabled;
		}
	}
}

.theme-oo-ui-dropdownWidget() {
	width: @size-full;
	max-width: @max-width-input;
	.oo-ui-inline-spacing( @margin-end-widget );

	&-handle {
		min-height: @min-size-interactive-pointer; // Address label-less widgets
		border: @border-base;
		border-radius: @border-radius-base;
		padding: @padding-vertical-base @padding-end-dropdown @padding-vertical-base @padding-horizontal-base;
		line-height: @line-height-reset;

		.oo-ui-iconElement-icon {
			left: @padding-horizontal-base;
		}

		.oo-ui-indicatorElement-indicator {
			// Workaround for 'down' indicator inner distance.
			@size-icon-x-small-inner-distance: 1px;
			right: @padding-horizontal-base - @size-icon-x-small-inner-distance;
		}

		.oo-ui-labelElement-label {
			line-height: @line-height-label;
		}
	}

	&.oo-ui-iconElement &-handle {
		padding-left: @padding-start-button-framed-icon-label;
	}

	&.oo-ui-indicatorElement &-handle {
		padding-right: @size-icon-x-small + ( 2 * unit( @padding-horizontal-base ) / @ooui-font-size-browser / @ooui-font-size-base );
	}

	&.oo-ui-widget-enabled &-handle {
		background-color: @background-color-interactive-subtle;
		color: @color-base;
		transition-property: background-color, border-color, box-shadow;
		transition-duration: @transition-duration-base;

		&:hover {
			background-color: @background-color-base;
			color: @color-base--hover;
			border-color: @border-color-base;

			.oo-ui-iconElement-icon,
			.oo-ui-indicatorElement-indicator {
				opacity: @opacity-icon-base--hover;
			}
		}

		&:active {
			color: @color-emphasized;
			border-color: @border-color-interactive;
		}

		&:focus {
			border-color: @border-color-progressive--focus;
			outline: @outline-base--focus;
			box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus;
		}

		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base;
			transition-property: opacity;
			transition-duration: @transition-duration-base;
		}
	}

	&.oo-ui-widget-enabled&-open &-handle {
		background-color: @background-color-base;

		.oo-ui-iconElement-icon,
		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base--selected;
		}
	}

	&.oo-ui-widget-disabled &-handle {
		color: @color-disabled;
		text-shadow: @text-shadow-base--disabled;
		border-color: @border-color-disabled;
		background-color: @background-color-disabled-subtle;

		&:focus {
			// Support: Chrome <90 shows outline on click when element has `tabindex` attribute,
			// no matter if it's value is `-1`.
			outline: 0;
		}

		.oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base--disabled;
		}
	}
}

.theme-oo-ui-dropdownInputWidget() {
	width: @size-full;
	max-width: @max-width-input;

	select {
		// Remove user agent styles.
		-webkit-appearance: none;
		-moz-appearance: none;
		// Support Firefox <= 34: Anything apart from `transparent` mixes up `option` sizes.
		background-color: transparent;
		background-position: right @padding-horizontal-base center;
		box-sizing: border-box;
		// Support Firefox <= 34: `height` needed in addition to adding, otherwise oversized.
		height: @size-200;
		border: @border-base;
		border-radius: @border-radius-base;
		padding-left: @padding-horizontal-base;
		padding-right: @padding-end-dropdown;
		font-size: inherit;
		font-family: inherit;
		vertical-align: middle;
	}

	option {
		background-color: transparent;
		font-size: inherit;
		font-family: inherit;
		height: 1.5em;
		padding: @padding-base;
	}

	&.oo-ui-widget-enabled {
		background-color: @background-color-interactive-subtle;
		transition-property: background-color;
		transition-duration: @transition-duration-base;

		&:hover {
			background-color: @background-color-base;
		}

		select {
			color: @color-base;
			transition-property: border-color, box-shadow;
			transition-duration: @transition-duration-base;

			&:hover {
				color: @color-base--hover;
				border-color: @border-color-base;
			}

			&:active {
				color: @color-emphasized;
				border-color: @border-color-interactive;
			}

			&:focus {
				border-color: @border-color-progressive--focus;
				outline: @outline-base--focus;
				box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus;
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-disabled-subtle;

		select {
			color: @color-disabled;
			border-color: @border-color-disabled;
		}
	}
}

.theme-oo-ui-iconWidget() {
	line-height: 2.5;
	display: inline-block;
	position: static;
	top: auto;
	height: @size-icon-medium;

	&.oo-ui-widget-disabled {
		opacity: @opacity-icon-base--disabled;
	}
}

.theme-oo-ui-indicatorWidget() {
	line-height: 2.5;
	display: inline-block;
	position: static;
	top: auto;
	height: @size-icon-x-small;

	&.oo-ui-widget-disabled {
		opacity: @opacity-icon-base--disabled;
	}
}

.theme-oo-ui-inputWidget() {
	.oo-ui-inline-spacing( @margin-end-widget );
}

.theme-oo-ui-labelWidget() {
	&.oo-ui-inline-help {
		display: block;
		color: @color-subtle;
		font-size: @font-size-small;
	}
}

.theme-oo-ui-menuOptionWidget() {
	transition-property: background-color, color;
	transition-duration: @transition-duration-base;

	&-checkIcon {
		display: none;
	}

	&.oo-ui-optionWidget {
		&-highlighted {
			background-color: @background-color-interactive;
			color: @color-emphasized;
		}

		&-selected,
		&-selected&-highlighted,
		&-pressed&-highlighted {
			background-color: @background-color-progressive-subtle;
			color: @color-progressive;
		}
	}

	&.oo-ui-widget-enabled {
		&.oo-ui-optionWidget {
			color: @color-base;
		}
	}
}

.theme-oo-ui-menuSectionOptionWidget() {
	color: @color-base--subtle;
	padding: @padding-vertical-base @padding-horizontal-base @padding-vertical-label;
	font-weight: @font-weight-bold;

	& ~ .oo-ui-menuOptionWidget {
		padding-left: 2 * @padding-horizontal-base;

		&.oo-ui-iconElement {
			padding-left: @padding-start-menu-icon-label + @padding-horizontal-base-iconized;

			.oo-ui-iconElement-icon {
				left: 2 * @padding-horizontal-base-iconized;
			}
		}
	}
}

.theme-oo-ui-menuSelectWidget() {
	background-color: @background-color-base;
	border: @border-base;
	border-radius: @border-radius-base;
	box-shadow: @box-shadow-drop-medium;
}

.theme-oo-ui-menuTagMultiselectWidget() {}

.theme-oo-ui-messageWidget() {
	font-weight: @font-weight-bold;

	> .oo-ui-iconElement-icon {
		background-position: 0 0;
	}

	> .oo-ui-labelElement-label {
		margin-left: @size-icon-medium + @padding-start-messages;
	}

	&.oo-ui-messageWidget-block {
		border: @border-width-base @border-style-base;
		padding: @padding-vertical-message-block @padding-horizontal-message-block;
		font-weight: @font-weight-normal;

		> .oo-ui-iconElement-icon {
			background-position: 0 @padding-vertical-message-block;
		}

		&.oo-ui-messageWidget-showClose {
			padding-right: @min-size-interactive-pointer + @padding-horizontal-message-block;
		}

		> .oo-ui-messageWidget-close {
			position: absolute;
			top: 8px;
			right: 8px;
		}

		&.oo-ui-flaggedElement-error {
			background-color: @background-color-error-subtle;
			border-color: @border-color-error;
		}

		&.oo-ui-flaggedElement-warning {
			background-color: @background-color-warning-subtle;
			border-color: @border-color-warning;
		}

		&.oo-ui-flaggedElement-success {
			background-color: @background-color-success-subtle;
			border-color: @border-color-success;
		}

		&.oo-ui-flaggedElement-notice {
			background-color: @background-color-notice-subtle;
			border-color: @border-color-notice;
		}
	}

	&.oo-ui-flaggedElement-error:not( .oo-ui-messageWidget-block ) {
		color: @color-error;
	}

	&.oo-ui-flaggedElement-success:not( .oo-ui-messageWidget-block ) {
		color: @color-success;
	}

	& + .oo-ui-messageWidget {
		margin-top: @margin-top-message;
	}
}

.theme-oo-ui-multioptionWidget() {
	&.oo-ui-widget-disabled {
		color: @color-disabled;
	}
}

.theme-oo-ui-multiselectWidget() {}

.theme-oo-ui-numberInputWidget() {
	max-width: @max-width-input;

	&-buttoned {
		.oo-ui-buttonWidget {
			width: @width-button-combo-widget;

			.oo-ui-buttonElement-button {
				display: block;
				min-width: @min-width-button-combo-widget;
				min-height: @min-size-interactive-pointer;
				padding-left: 0;
				padding-right: 0;
			}
		}

		.oo-ui-inputWidget-input {
			height: @size-200;
			border-radius: 0;
		}
	}

	&-minusButton > .oo-ui-buttonElement-button {
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
		border-right-width: 0;
	}

	&-plusButton > .oo-ui-buttonElement-button {
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
		border-left-width: 0;
	}

	&.oo-ui-widget-disabled {
		&.oo-ui-numberInputWidget-buttoned .oo-ui-iconElement-icon {
			// Exception for not using `@opacity-icon-base--disabled` due to inverting
			// colors on filled disabled widgets.
			opacity: @opacity-base;
		}
	}
}

.theme-oo-ui-optionWidget() {
	// Don't add `highlighted` or `selected` modifications here
	// as it inherits to various visually opposite widgets.

	&-selected .oo-ui-buttonElement-button > .oo-ui-iconElement-icon {
		opacity: @opacity-icon-base--selected;
	}

	&.oo-ui-widget-disabled {
		color: @color-disabled;
	}
}

.theme-oo-ui-outlineControlsWidget() {
	background-color: @background-color-base;

	&-items,
	&-movers {
		> .oo-ui-buttonWidget {
			height: @size-200;
			width: @size-200;
			// There's a lot of weird specific margins with weird specific selectors
			margin: 0 !important; /* stylelint-disable-line declaration-no-important */
		}
	}
}

.theme-oo-ui-outlineOptionWidget() {
	padding: @padding-menu-large;
	transition-property: background-color, color;
	transition-duration: @transition-duration-base;

	&.oo-ui-optionWidget-highlighted {
		background-color: @background-color-interactive;
		color: @color-emphasized;
	}

	&.oo-ui-optionWidget-selected,
	&.oo-ui-optionWidget-pressed {
		background-color: @background-color-progressive-subtle;
		color: @color-progressive;
	}

	&.oo-ui-indicatorElement {
		.oo-ui-labelElement-label {
			padding-right: 1.5em;
		}
	}

	&-level-1 {
		padding-left: 2.571em;

		&.oo-ui-iconElement {
			padding-left: 4.429em;

			.oo-ui-iconElement-icon {
				left: 2.571em;
			}
		}
	}

	&-level-2 {
		padding-left: 5.142em;

		&.oo-ui-iconElement {
			padding-left: 6.857em;

			.oo-ui-iconElement-icon {
				left: 4.429em;
			}
		}
	}
}

.theme-oo-ui-outlineSelectWidget() {
	height: 100%;

	&:focus {
		box-shadow: @box-shadow-inset-medium @box-shadow-color-progressive--focus;
	}
}

.theme-oo-ui-popupWidget() {
	&-popup {
		background-color: @background-color-base;
		border: @border-base;
		border-radius: @border-radius-base;
		box-shadow: @box-shadow-drop-medium;
	}

	// Support: Progressively enhance for browser's which render `filter`.
	@supports ( filter: drop-shadow( 0 0 0 ) ) {
		filter: @filter-drop-shadow-menu;
		// Safari can have visual glitches with lingering shadows in some contexts
		// when using drop-shadow. This makes it be more zealous about cleaning
		// up. (See: T226872)
		// stylelint-disable-next-line plugin/no-unsupported-browser-features
		.oo-ui-force-gpu-composite-layer();

		&-popup {
			box-shadow: none;
		}
	}

	&-anchored-top {
		margin-top: @size-anchor;

		.oo-ui-popupWidget-anchor {
			top: -@size-anchor;

			&::before {
				bottom: -@size-anchor - 1px;
				left: -@size-anchor;
				// The subtracting-triangles method results in a line that
				// is ~0.7px wide, so make it slightly darker to compensate.
				border-bottom-color: @border-color-interactive;
				border-width: @size-anchor + 1px;
			}

			&::after {
				bottom: -@size-anchor - 1px;
				left: -@size-anchor + 1px;
				border-bottom-color: @background-color-base; // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
				border-width: @size-anchor;
			}
		}
	}

	&-anchored-bottom {
		margin-bottom: @size-anchor;

		.oo-ui-popupWidget-anchor {
			bottom: -@size-anchor;

			&::before {
				top: -@size-anchor - 1px;
				left: -@size-anchor;
				border-top-color: @border-color-base;
				border-width: @size-anchor + 1px;
			}

			&::after {
				top: -@size-anchor - 1px;
				left: -@size-anchor + 1px;
				border-top-color: @background-color-base; // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
				border-width: @size-anchor;
			}
		}
	}

	&-anchored-start {
		margin-left: @size-anchor;

		.oo-ui-popupWidget-anchor {
			left: -@size-anchor;

			&::before {
				right: -@size-anchor - 1px;
				top: -@size-anchor;
				border-right-color: @border-color-base;
				border-width: @size-anchor + 1px;
			}

			&::after {
				right: -@size-anchor - 1px;
				top: -@size-anchor + 1px;
				border-right-color: @background-color-base;  // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
				border-width: @size-anchor;
			}
		}
	}

	&-anchored-end {
		margin-right: @size-anchor;

		.oo-ui-popupWidget-anchor {
			right: -@size-anchor;

			&::before {
				left: -@size-anchor - 1px;
				top: -@size-anchor;
				border-left-color: @border-color-base;
				border-width: @size-anchor + 1px;
			}

			&::after {
				left: -@size-anchor - 1px;
				top: -@size-anchor + 1px;
				border-left-color: @background-color-base;  // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
				border-width: @size-anchor;
			}
		}
	}

	&-transitioning .oo-ui-popupWidget-popup {
		transition-property: width, height, left;
		transition-duration: @transition-duration-base;
	}

	&-head {
		// Headers and footers are always padded
		// Set bottom margin here to it can collapse with the body
		margin-bottom: @margin-vertical-popup;

		> .oo-ui-iconElement-icon {
			left: @start-framed-icon-only;
			height: calc( @size-icon-medium ~' + 2 * ' @margin-vertical-popup );
		}

		> .oo-ui-iconElement-noIcon + .oo-ui-labelElement-label {
			margin-left: @padding-horizontal-base;
		}

		> .oo-ui-labelElement-label {
			display: inline-block;
			margin: @margin-vertical-popup @min-size-interactive-pointer 0 @padding-start-menu-icon-label;
			line-height: @line-height-label;
		}

		> .oo-ui-buttonWidget {
			position: absolute;
			right: 0;

			.oo-ui-icon-close {
				// This must have two values to match `background-size: 0 0` above,
				// otherwise the transition does not work (at least in Chrome).
				background-size: @size-100 @size-100;
			}
		}
	}

	&-body {
		line-height: @line-height-label;

		&-padded {
			// Use 'margin' rather than 'padding' to allow the margin to collapse with
			// the margin of <p> elements etc. inside the popup
			margin: @padding-vertical-base @padding-horizontal-base;
		}
	}

	&-footer {
		// Headers and footers are always padded
		margin: @margin-vertical-popup @padding-horizontal-base;
	}
}

.theme-oo-ui-popupButtonWidget() {
}

.theme-oo-ui-progressBarWidget() {
	// Support Safari: Create a stacking context to prevent the bar from overflowing the
	// `border-radius` of the component's root element by `position: relative` and
	// `z-index` other than `auto`.
	position: relative;
	z-index: 0;
	max-width: @max-width-base;
	border: @border-base;
	border-radius: @border-radius-pill;
	box-shadow: @box-shadow-drop-medium;
	overflow: hidden;

	&:not( .oo-ui-pendingElement-pending ) {
		background-color: @background-color-base;
	}

	&-bar {
		height: @height-progressbar-bar;
		transition-property: width;
		transition-duration: @transition-duration-base;
	}

	&-indeterminate {
		.oo-ui-progressBarWidget-bar {
			animation: oo-ui-progressBarWidget-slide 1.6s infinite linear;
			width: 33%;
			transform: translate( -25% );
		}
	}

	&.oo-ui-widget-enabled {
		.oo-ui-progressBarWidget-bar {
			background-color: @background-color-progressive;
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-progressBarWidget-bar {
			background-color: @background-color-disabled;
		}
	}

	@keyframes oo-ui-progressBarWidget-slide {
		from {
			transform: translate( -100% );
		}

		to {
			transform: translate( 300% );
		}
	}
}

.theme-oo-ui-radioInputWidget() {
	// Create a stacking context, so that we can use `z-index` below without leaking out
	z-index: 0;
	position: relative;
	line-height: @size-input-binary;
	// Prevent the fake span from jumping to the next line of text
	white-space: nowrap;

	* {
		font: inherit;
		vertical-align: middle;
	}

	// `<input type=radio>` element is visually replaced by `span` that follows
	[ type='radio' ] {
		position: relative;
		// Support: Firefox mobile to override user-agent stylesheet, see T73750
		max-width: none;
		// Ensure the invisible input takes up the required width
		width: @size-input-binary;
		height: @size-input-binary;
		// Having margin would offset the input from where the span is absolutely positioned,
		// making only the overlap region receive events
		margin: 0;
		// Use opacity so that VoiceOver can still identify it
		opacity: 0;
		// Render "on top of" the span, so that it's still clickable
		z-index: 1;

		& + span {
			background-color: @background-color-base-fixed;
			position: absolute;
			left: 0;
			box-sizing: border-box;
			width: @size-input-binary;
			height: @size-input-binary;
			border-color: @border-color-input-binary;
			border-style: @border-style-base;
			border-radius: @border-radius-circle;
			border-width: @border-width-base;

			// Needed for `:focus` state's inner white circle
			&::before {
				content: ' ';
				position: absolute;
				// `px` unit due to pixel rounding error when using
				// `@size-input-binary / 4`.
				top: @position-offset-input-radio-focus;
				left: @position-offset-input-radio-focus;
				right: @position-offset-input-radio-focus;
				bottom: @position-offset-input-radio-focus;
				border: @border-width-base @border-style-base @border-color-transparent;
				border-radius: @border-radius-circle;
			}
		}

		&:checked {
			& + span,
			&:hover + span,
			&:focus:hover + span {
				border-width: @border-width-radio--checked;
			}
		}

		&:disabled {
			& + span {
				background-color: @background-color-disabled;
				border-color: @border-color-disabled;
			}

			&:checked + span {
				background-color: @background-color-base-fixed;
			}
		}
	}

	&.oo-ui-widget-enabled [ type='radio' ] {
		cursor: pointer;

		& + span {
			cursor: pointer;
			transition-property: background-color, border-color, border-width;
			transition-duration: @transition-duration-base;
		}

		&:hover + span {
			border-color: @border-color-progressive--hover;
		}

		&:active + span {
			background-color: @background-color-progressive--active;
			border-color: @border-color-input-binary--active;
		}

		&:checked {
			& + span {
				border-color: @border-color-input-binary--checked;
			}

			// `:focus` has to come first, otherwise a specificity race with `:hover:focus` etc is necessary
			&:focus + span {
				&::before {
					border-color: @background-color-base-fixed;
				}
			}

			&:hover + span {
				border-color: @border-color-progressive--hover;
			}

			&:active + span {
				border-color: @border-color-input-binary--active;
				box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--active;

				&::before {
					border-color: @border-color-input-binary--active;
				}
			}
		}
	}
}

.theme-oo-ui-radioOptionWidget() {
	padding: @padding-vertical-label 0;

	&:first-child {
		padding-top: 0;
	}

	&.oo-ui-labelElement > .oo-ui-labelElement-label {
		padding-left: @padding-start-fieldlayout-label;
	}

	.oo-ui-radioInputWidget {
		margin-right: 0;
	}
}

.theme-oo-ui-radioSelectWidget() {
	&:focus {
		// The RadioSelectWidget element is focusable when enabled, but we
		// want the focus visual outline only on single RadioOptionWidgets.
		outline: 0;

		[ type='radio' ]:checked + span::before {
			border-color: @background-color-base;
		}
	}
}

.theme-oo-ui-radioSelectInputWidget() {
	.oo-ui-fieldLayout {
		// Override `.oo-ui-fieldLayout.oo-ui-labelElement`.
		margin-top: 0;
		// Equal to RadioOptionWidget and to prevent collapsing `margin`s.
		padding: @padding-vertical-label 0;

		&:first-child {
			padding-top: 0;
		}
	}
}

.theme-oo-ui-searchWidget() {
	&-query {
		height: @height-search;
		padding: @padding-panel-form-search-query; // Need to use `padding` over `margin` for horizontally continuos `border`/`box-shadow` below
		border-bottom: @border-subtle;
		box-shadow: @box-shadow-drop-small;

		.oo-ui-textInputWidget {
			margin: @margin-search 0;
		}
	}

	&-results {
		top: @height-search;
		padding: @padding-panel-form; // Use smaller `@padding-panel-form` over `@padding-panel-dialog` for image results
		line-height: 0;
	}
}

.theme-oo-ui-selectWidget() {}

.theme-oo-ui-selectFileInputWidget() {
	width: @size-full;
	max-width: @max-width-input;
	min-height: @min-size-interactive-pointer;

	&-info > .oo-ui-inputWidget-input {
		height: @size-200;
	}

	&-dropTarget {
		background-color: @background-color-base;
		border: @border-base;
		border-radius: @border-radius-base;
		vertical-align: middle;
		overflow: hidden;

		&.oo-ui-selectFileInputWidget-empty {
			border-style: dashed;
		}

		// Inline style `background-image` on thumbnail will take place over PendingElement.
		.oo-ui-pendingElement-pending {
			background-size: @size-icon-medium @size-icon-medium;
		}
	}

	&-buttonOnly {
		// Reset widths that conflict with buttonWidget styles
		width: auto;
		max-width: none;
	}

	&.oo-ui-widget-enabled {
		&.oo-ui-selectFileInputWidget-dropTarget {
			background-color: @background-color-base;
			transition-property: background-color, color, border-color;
			transition-duration: @transition-duration-medium;

			&:hover {
				border-color: @border-color-input--hover;
			}
		}

		.oo-ui-selectFileInputWidget-info > .oo-ui-inputWidget-input {
			transition-property: background-color, color;
			transition-duration: @transition-duration-medium;
		}

		&.oo-ui-selectFileInputWidget-canDrop {
			&.oo-ui-selectFileInputWidget-dropTarget,
			.oo-ui-selectFileInputWidget-info > .oo-ui-inputWidget-input {
				background-color: @background-color-progressive-subtle;
				color: @color-progressive--active;
			}
		}

		&.oo-ui-selectFileInputWidget-cantDrop {
			&.oo-ui-selectFileInputWidget-dropTarget,
			.oo-ui-selectFileInputWidget-info > .oo-ui-inputWidget-input {
				background-color: @background-color-error-subtle;
				color: @border-color-error;
			}
		}
	}

	&.oo-ui-widget-disabled,
	&.oo-ui-selectFileInputWidget-empty.oo-ui-widget-disabled {
		&.oo-ui-selectFileInputWidget-dropTarget {
			background-color: @background-color-disabled-subtle;
			border-color: @border-color-disabled;
		}
	}
}

.theme-oo-ui-tabOptionWidget() {
	color: @color-base;
	margin: @margin-taboption 0 0 @margin-taboption;
	padding: 0 @padding-horizontal-taboption;
	border-color: transparent;
	border-style: @border-style-base;
	font-weight: @font-weight-bold;
	line-height: @line-height-reset;
	transition-property: background-color, color, border-color;
	transition-duration: @transition-duration-base;

	&.oo-ui-optionWidget-selected {
		cursor: default;
	}

	> .oo-ui-labelElement-label {
		color: inherit;
		padding: @padding-vertical-base @padding-horizontal-taboption-label;
		line-height: @line-height-label;
		text-decoration: inherit;
	}

	.oo-ui-tabSelectWidget-mobile &:last-child {
		margin-right: @margin-taboption * 3; // Equals to mobile overflow gradient below.
	}

	.oo-ui-tabSelectWidget-framed & {
		border-width: @border-width-base @border-width-base 0 @border-width-base;
		border-top-left-radius: @border-radius-base;
		border-top-right-radius: @border-radius-base;

		.oo-ui-labelElement-label {
			border-bottom: ( 2 * @border-width-base ) @border-style-base transparent;
			padding: @padding-vertical-base @padding-horizontal-taboption-label ( @padding-vertical-base - 2 * @border-width-base ); // Provide additional `padding` on label itself for special tab focus
			transition-property: border-color;
			transition-duration: @transition-duration-base;
		}

		&.oo-ui-optionWidget-selected {
			background-color: @background-color-base;
			color: @color-emphasized;

			.oo-ui-labelElement-label {
				border-bottom-color: @background-color-base; // TabOption `background-color` acting as default `border-color`
			}
		}

		&.oo-ui-widget-enabled {
			&:hover {
				background-color: rgba( 255, 255, 255, 0.3 );
				color: @color-base;
			}

			&:active {
				background-color: rgba( 255, 255, 255, 0.8 );
				color: @color-emphasized;
			}

			&.oo-ui-optionWidget-selected:hover {
				background-color: @background-color-base;
			}
		}
	}

	.oo-ui-tabSelectWidget-framed.oo-ui-widget-enabled:focus &.oo-ui-optionWidget-selected .oo-ui-labelElement-label {
		border-bottom-color: @border-color-progressive--focus;
	}

	.oo-ui-tabSelectWidget-frameless & {
		margin: @margin-taboption @margin-taboption -@border-width-base 0;
		border-width: @border-width-base 0;
		box-shadow: inset 0 0 0 0 @color-progressive;
		transition-property: color, box-shadow;
		transition-duration: @transition-duration-base;

		&.oo-ui-optionWidget-selected {
			color: @color-progressive;
			box-shadow: inset 0 -@border-width-thick 0 0 @color-progressive;
		}

		&.oo-ui-widget-enabled:not( .oo-ui-optionWidget-selected ) {
			&:hover {
				color: @color-progressive--hover;
				box-shadow: inset 0 -@border-width-thick 0 0 @color-progressive--hover;
			}

			&:active {
				color: @color-progressive--active;
				box-shadow: inset 0 -@border-width-thick 0 0 @color-progressive--active;
			}
		}
	}

	.oo-ui-tabSelectWidget-frameless.oo-ui-widget-enabled:focus &.oo-ui-optionWidget-selected {
		border-radius: @border-radius-base;
		box-shadow: inset 0 0 0 @border-width-thick @color-progressive;
	}
}

.theme-oo-ui-tabSelectWidget() {
	&-framed {
		background-color: @background-color-interactive;
	}

	&-frameless {
		box-shadow: inset 0 -@border-width-base 0 0 @border-color-base;
	}

	// Add background gradient to emphasize tab overflow.
	&-mobile {
		&::after {
			content: '';
			position: absolute;
			bottom: 0;
			right: 0;
			width: @margin-taboption * 3;
			height: @size-200;
			pointer-events: none;
		}

		&.oo-ui-tabSelectWidget-framed::after {
			.oo-ui-horizontal-gradient( fade( #eaecf0, 0 ), #eaecf0 );
			// Override fallback color from mixin
			background-color: transparent;
		}

		&.oo-ui-tabSelectWidget-frameless::after {
			.oo-ui-horizontal-gradient( fade( #fff, 0 ), #fff );
			// Override fallback color from mixin
			background-color: transparent;
			bottom: @size-modifier-border * 2;
		}
	}

	// Keyboard focus is handled in TabOptionWidget above
	&.oo-ui-widget-enabled:focus {
		outline: 0;
	}
}

.theme-oo-ui-tagItemWidget() {
	box-sizing: border-box;
	width: auto;
	max-width: 100%;
	height: @height-tagitem;
	margin: 0 @margin-tagitem @margin-tagitem 0;
	border: @border-base;
	border-radius: @height-tagitem;
	padding: 0 @padding-horizontal-tagitem;
	line-height: @height-tagitem - 2 * @size-modifier-border;
	vertical-align: middle;

	&.oo-ui-labelElement .oo-ui-labelElement-label {
		font-size: @font-size-small;
		line-height: @line-height-tagitem-label;
	}

	&.oo-ui-widget-enabled {
		color: @color-base;
		transition-property: background-color, color, border-color, box-shadow;
		transition-duration: @transition-duration-base;

		&:hover {
			background-color: @background-color-base;
			color: @color-base--hover;
			border-color: @border-color-base;
		}

		&:focus {
			border-color: @border-color-progressive--focus;
			box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus;
			outline: @outline-base--focus;
		}

		&:not( .oo-ui-tagItemWidget-fixed ) {
			background-color: @background-color-interactive-subtle;
			padding-right: @padding-end-tagitem-remove;
		}

		&.oo-ui-flaggedElement-invalid {
			border-color: @border-color-error;

			&:hover {
				border-color: @border-color-error;
			}

			&:focus {
				border-color: @border-color-error;
				box-shadow: @box-shadow-inset-small @box-shadow-color-destructive--focus;
			}
		}

		// Remove button
		> .oo-ui-buttonElement {
			display: block;
			position: absolute;
			top: 0;
			right: 0;
		}

		& .oo-ui-buttonElement-button {
			display: block;
			// Button override
			min-width: @min-size-button-tagitem-remove;
			min-height: @min-size-button-tagitem-remove;
			// frameless reset
			border: 0;
			border-radius: @height-tagitem;
			padding-top: @size-button-tagitem-remove;
			padding-left: @size-button-tagitem-remove;
			transition-property: background-color;
			transition-duration: @transition-duration-base;

			&:hover {
				background-color: @background-color-base;
			}

			&:active {
				background-color: @background-color-interactive;
			}

			.oo-ui-icon-close {
				left: @margin-tagitem - @border-width-base;
				min-width: @min-size-icon-small;
				width: @size-icon-small;
			}

			.oo-ui-labelElement-label,
			.oo-ui-indicatorElement-indicator {
				display: none;
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-disabled-subtle;
		color: @color-disabled;
		border-color: @border-color-disabled;
		text-shadow: @text-shadow-base--disabled;

		&:focus {
			outline: 0;
		}

		// Clear button
		> .oo-ui-buttonElement {
			display: none;
		}
	}
}

.theme-oo-ui-tagMultiselectWidget() {
	width: @size-full;
	max-width: @max-width-input;
	vertical-align: top;

	&-handle {
		box-sizing: border-box;
		min-height: @min-size-interactive-pointer;
		.oo-ui-inline-spacing( @margin-end-widget );
		border: @border-base;
		border-radius: @border-radius-base;
		padding: 0 @padding-horizontal-input-text;
		line-height: @line-height-reset;

		.oo-ui-tagMultiselectWidget-group {
			display: inline-block;
			max-width: 100%;
			margin-top: @margin-tagitem;
			margin-left: @size-tag-group-modifier;

			> input {
				background-color: transparent;
				color: @color-emphasized;
				box-sizing: border-box;
				height: @size-200 - 2 * ( @size-modifier-border );
				border: 0;
				padding: @padding-vertical-base 0 @padding-vertical-base @start-tagmultiselect-input;
				margin-top: -@margin-tagitem;
				font-family: inherit;
				font-size: inherit;
				line-height: @line-height-label;
				vertical-align: top;

				.mw-placeholder();

				&:focus {
					outline: @outline-base--focus; // Support: Chrome
				}

				// Match appearance of TextInputWidget when empty
				&:first-child {
					margin-left: -@size-tag-group-modifier;
					padding-left: 0;
				}
			}
		}
	}

	&.oo-ui-iconElement &-handle {
		padding-left: @size-icon-medium + 2 * 0.3em;

		> .oo-ui-iconElement-icon {
			left: 0;
			margin: 0 0.3em;
		}
	}

	&.oo-ui-indicatorElement &-handle {
		padding-right: @size-icon-x-small + 2 * 0.775em;

		> .oo-ui-indicatorElement-indicator {
			right: 0;
			margin: 0 0.775em;
		}
	}

	&.oo-ui-tagMultiselectWidget-outlined {
		.oo-ui-tagMultiselectWidget-handle {
			border-bottom: 0;
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
		}

		.oo-ui-inputWidget-input {
			border-top-left-radius: 0;
			border-top-right-radius: 0;
		}
	}

	&.oo-ui-widget-enabled {
		// `background-color` needs to be on handle parent in oorder to enable pending animation.
		background-color: @background-color-base;

		.oo-ui-tagMultiselectWidget-handle {
			transition-property: border-color, box-shadow;
			transition-duration: @transition-duration-medium;
		}

		&.oo-ui-tagMultiselectWidget-inlined {
			&:hover .oo-ui-tagMultiselectWidget-handle {
				border-color: @border-color-input--hover;
			}

			&.oo-ui-tagMultiselectWidget-focus .oo-ui-tagMultiselectWidget-handle {
				border-color: @border-color-progressive--focus;
				outline: @outline-base--focus;
				box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus;
			}

			&.oo-ui-flaggedElement-invalid {
				.oo-ui-tagMultiselectWidget-handle,
				&:hover .oo-ui-tagMultiselectWidget-handle {
					border-color: @border-color-error;
				}
			}
		}

		&.oo-ui-tagMultiselectWidget-outlined {
			background-color: @background-color-neutral-subtle;

			.oo-ui-tagItemWidget.oo-ui-widget-enabled {
				background-color: @background-color-base;
			}

			&.oo-ui-flaggedElement-invalid .oo-ui-inputWidget-input {
				border-color: @border-color-error;
			}
		}

		&.oo-ui-flaggedElement-invalid .oo-ui-inputWidget-input {
			color: @color-error;
		}
	}

	&.oo-ui-widget-disabled &-handle {
		background-color: @background-color-disabled-subtle;
		color: @color-disabled;
		text-shadow: @text-shadow-base--disabled;
		border-color: @border-color-disabled;

		> .oo-ui-iconElement-icon,
		> .oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base--disabled;
		}
	}
}

.theme-oo-ui-textInputWidget() {
	width: @size-full;
	max-width: @max-width-input;

	// `.oo-ui-inputWidget-input` serves both, `input` and `textarea`
	.oo-ui-inputWidget-input {
		background-color: @background-color-base;
		color: @color-emphasized;
		margin: 0;
		border: @border-base;
		border-radius: @border-radius-base;
		padding: @padding-input-text;
		font-size: inherit;
		font-family: inherit;
		line-height: @line-height-label;
	}

	// TextInputWidget (single line).
	input {
		// `input` elements `line-height` is widely ignored by browsers,
		// hence relying on `height`, see T216070
		height: @size-200;
	}

	.oo-ui-pendingElement-pending {
		background-color: @background-color-interactive;
	}

	&.oo-ui-iconElement {
		.oo-ui-inputWidget-input {
			padding-left: @padding-start-input-text-icon-label;
		}

		> .oo-ui-iconElement-icon {
			// In contrast to ButtonWidget, add `border` to `left` as icon is a sibling of
			// `input` with its `border.
			left: @padding-horizontal-input-text + @border-width-base;
		}

		textarea + .oo-ui-iconElement-icon {
			max-height: @size-200; // Use `@size-base` as `max-height` for multiline TextInputWidgets
		}
	}

	> .oo-ui-labelElement-label {
		color: @color-base--subtle;
		padding: 0 @padding-horizontal-base 0 @padding-horizontal-input-text;
		line-height: @size-200;
	}

	&.oo-ui-indicatorElement {
		.oo-ui-inputWidget-input {
			padding-right: @min-size-icon-x-small + 2 * @padding-horizontal-input-text;
		}

		&.oo-ui-textInputWidget-labelPosition-after > .oo-ui-labelElement-label {
			padding-right: 0;
		}

		> .oo-ui-indicatorElement-indicator {
			max-height: @size-200;
			margin-right: @padding-start-indicator;
		}
	}

	&-labelPosition-after {
		&.oo-ui-indicatorElement > .oo-ui-labelElement-label {
			margin-right: @size-200;
		}
	}

	&-labelPosition-before {
		&.oo-ui-iconElement > .oo-ui-labelElement-label {
			padding-left: @padding-start-input-text-icon-label;
		}
	}

	&.oo-ui-widget-enabled {
		.oo-ui-inputWidget-input {
			box-shadow: @box-shadow-inset-small @box-shadow-color-transparent; // necessary for smooth transition
			transition-property: border-color, box-shadow;
			transition-duration: @transition-duration-medium;

			.mw-placeholder();

			&:focus {
				border-color: @border-color-progressive--focus;
				outline: @outline-base--focus;
				box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus;

				~ .oo-ui-iconElement-icon,
				~ .oo-ui-indicatorElement-indicator {
					opacity: @opacity-icon-base--selected;
				}
			}

			&[ readonly ]:not( .oo-ui-pendingElement-pending ) {
				background-color: @background-color-neutral-subtle;
			}
		}

		// Set on widget parent to also enable `:hover` on child elmeents
		&:hover {
			.oo-ui-inputWidget-input {
				border-color: @border-color-input--hover;

				// Applying `border-color` again to show right focus color
				&:focus {
					border-color: @border-color-progressive--focus;
				}
			}
		}

		// HACK: Exclude IE/Edge (and Saf<6) from this selector as it
		// doesn't understand `outline-offset`. All other browsers do. :/

		@media screen {
			@media ( min-width: 0 ) {
				textarea.oo-ui-inputWidget-input:focus {
					outline: 1px solid @color-progressive;
					outline-offset: -2px;
				}

				&.oo-ui-flaggedElement-invalid textarea.oo-ui-inputWidget-input:focus {
					outline-color: @border-color-error;
				}
			}
		}

		> .oo-ui-iconElement-icon {
			opacity: @opacity-icon-subtle;
		}

		// Indicators, when in TextInputWidget variants visible by default,
		// are vast majority limited to 'required' indicator.
		// Applying higher opacity helps scanning the form for most important
		// form fields.
		> .oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base;
		}

		&.oo-ui-flaggedElement-invalid {
			.oo-ui-inputWidget-input {
				border-color: @border-color-error;

				&:hover {
					border-color: @border-color-error;
				}

				&:focus {
					border-color: @border-color-error;
					box-shadow: @box-shadow-inset-small @box-shadow-color-destructive--focus;
				}
			}
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-inputWidget-input {
			background-color: @background-color-disabled-subtle;
			// Support: Safari
			-webkit-text-fill-color: @color-disabled;
			color: @color-disabled;
			text-shadow: @text-shadow-base--disabled;
			border-color: @border-color-disabled;
		}

		> .oo-ui-iconElement-icon,
		> .oo-ui-indicatorElement-indicator {
			opacity: @opacity-icon-base--disabled;
		}

		> .oo-ui-labelElement-label {
			color: @color-disabled;
			text-shadow: @text-shadow-base--disabled;
		}
	}
}

.theme-oo-ui-toggleWidget() {}

.theme-oo-ui-toggleButtonWidget() {
	.oo-ui-inline-spacing( @margin-end-widget );

	&.oo-ui-widget-enabled.oo-ui-buttonElement-frameless.oo-ui-toggleWidget-on {
		.oo-ui-buttonElement-button {
			background-color: @background-color-button-quiet--active;
			color: @color-emphasized;

			& > .oo-ui-iconElement-icon:not( .oo-ui-image-invert ) {
				opacity: @opacity-icon-base--selected;
			}
		}
	}
}

.theme-oo-ui-toggleSwitchWidget() {
	background-color: @background-color-interactive-subtle;
	min-width: 48px;
	width: 3.5em;
	min-height: @min-size-interactive-pointer;
	height: 2em;
	border: @border-width-base @border-style-base @border-color-input-binary;
	border-radius: @border-radius-pill;
	.oo-ui-inline-spacing( @margin-end-widget );
	transition-property: background-color, border-color;
	transition-duration: @transition-duration-medium;

	// Inner focus outline, set visible when toggled on further down.
	&::before {
		content: '';
		display: block;
		position: absolute;
		top: 1px;
		left: 1px;
		bottom: 1px;
		right: 1px;
		border: @border-width-base @border-style-base @border-color-transparent;
		border-radius: @border-radius-pill;
		z-index: 1;
		transition-property: border-color;
		transition-duration: @transition-duration-medium;
	}

	// The moving element of the switch.
	&-grip {
		// Position vertically centered with help of `transform` further down.
		top: @size-half;
		// Adjust for border on parent element.
		// This avoids having to do translateX( calc( 100% + 1px ) ) below, which would not
		// be flipped correctly by CSSJanus.
		left: @size-absolute-1;
		min-width: @min-size-toggle-switch-grip;
		width: @size-125;
		min-height: @min-size-toggle-switch-grip;
		height: @size-125;
		border-radius: @border-radius-circle;
		transition-property: background-color, border-color, transform;
		transition-duration: @transition-duration-medium, @transition-duration-base, @transition-duration-base;
		// Set starting position with `transform` equivalent to x position.
		// Divide height by 50% to center the grip vertically.
		transform: translateX( ( @size-25 ) ) translateY( -@size-half );
	}

	&-glow {
		// We don't need this for any effects, we have the background on parent element
		display: none;
	}

	&.oo-ui-toggleWidget-on {
		.oo-ui-toggleSwitchWidget-grip {
			// Move the grip to the right equivalent to x position.
			// Continue to divide height by 50% to center the grip.
			transform: translateX( @size-full ) translateY( -@size-half );
		}
	}

	&.oo-ui-widget-enabled {
		.oo-ui-toggleSwitchWidget-grip {
			background-color: @background-color-interactive-subtle;
			border: @border-width-base @border-style-base @border-color-input-binary;
		}

		&:hover {
			background-color: @background-color-base;
			border-color: @border-color-progressive--hover;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-base;
				border-color: @border-color-progressive--hover;
			}
		}

		&:active,
		&:active:hover,
		&:active:focus {
			background-color: @background-color-progressive--active;
			border-color: @border-color-input-binary--active;
			box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--active;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-base;
				border-color: @background-color-base;
			}
		}

		&:focus {
			border-color: @border-color-progressive--focus;
			box-shadow: @box-shadow-inset-small @box-shadow-color-progressive--focus;
			outline: @outline-base--focus;

			.oo-ui-toggleSwitchWidget-grip {
				border-color: @border-color-progressive--focus;
			}
		}

		&.oo-ui-toggleWidget-on {
			background-color: @background-color-progressive;
			border-color: @border-color-input-binary--checked;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-base;
				border-color: @background-color-base;
			}

			&:hover {
				background-color: @background-color-progressive--hover;
				border-color: @border-color-progressive--hover;
			}

			&:active,
			&:active:hover {
				background-color: @background-color-progressive--active;
				border-color: @border-color-input-binary--active;
			}

			&:focus {
				border-color: @border-color-input-binary--checked;

				&::before {
					border-color: @border-color-inverted;
				}
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-disabled;
		border-color: @border-color-disabled;
		// Support: Chrome <90 shows outline on click when element has `tabindex` attribute,
		// no matter if it's value is `-1`.
		outline: 0;

		&.oo-ui-toggleWidget-off .oo-ui-toggleSwitchWidget-grip {
			border: @border-width-base @border-style-base @border-color-inverted;
			box-shadow: @box-shadow-inset-small @box-shadow-color-inverted;
		}

		&.oo-ui-toggleWidget-on .oo-ui-toggleSwitchWidget-grip {
			background-color: @background-color-base;
		}
	}
}

.mw-placeholder() {
	// Normalize placeholder styling, see T139034
	.oo-ui-placeholder( {
		color: @color-placeholder;
		opacity: @opacity-base;
	} );
}
